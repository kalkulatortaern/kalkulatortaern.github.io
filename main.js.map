{"version":3,"sources":["./src/app/opponent/opponent.component.ts","./src/app/opponent/opponent.component.html","./src/app/data/cards.ts","./src/app/player/player.component.ts","./src/app/player/player.component.html","./src/app/player/hand/hand.component.html","./src/app/player/hand/hand.component.ts","./src/app/battlefield/opponent-avatar/opponent-avatar.component.ts","./src/app/battlefield/opponent-avatar/opponent-avatar.component.html","./src/app/battlefield/battlefield.component.html","./src/app/battlefield/battlefield.component.ts","./src/environments/environment.ts","./src/app/battlefield/mental/mental.component.html","./src/app/battlefield/mental/mental.component.ts","./src/app/http.service.ts","./src/app/battlefield/ranged/ranged.component.html","./src/app/battlefield/ranged/ranged.component.ts","./src/app/shared/card/card.component.ts","./src/app/shared/card/card.component.html","./src/app/player/abilties/abilties.component.ts","./src/app/player/abilties/abilties.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/combat.service.ts","./src/app/player/hand/hand.service.ts","./src/app/app.module.ts","./src/app/player/deck/deck.service.ts","./src/app/battlefield/battlefield.service.ts","./src/app/battlefield/player-avatar/player-avatar.component.ts","./src/app/battlefield/player-avatar/player-avatar.component.html","./src/app/player/deck/deck.component.html","./src/app/player/deck/deck.component.ts","./src/app/shared/card/card.model.ts","./src/app/player/action-points/action-points.component.ts","./src/app/player/action-points/action-points.component.html","./src/app/battlefield/melee/melee.component.html","./src/app/battlefield/melee/melee.component.ts","./src/app/player/player.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-opponent',\r\n  templateUrl: './opponent.component.html',\r\n  styleUrls: ['./opponent.component.css']\r\n})\r\nexport class OpponentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>opponent works!</div>\r\n","import { RawCard } from \"../shared/card/card.model\"\r\n\r\nexport const cards: RawCard[] = [\r\n  {\r\n    name: \"Taernijski Wieśniak\",\r\n    attack: 1,\r\n    hp: 1,\r\n    cost: 1,\r\n    description: \"Zwykły wieśniak\",\r\n    type: \"ally\",\r\n    speed: 1,\r\n  },\r\n  {\r\n    name: \"Taernijski Rycerz\",\r\n    attack: 2,\r\n    hp: 4,\r\n    cost: 3,\r\n    description: \"Po prostu Rycerz\",\r\n    type: \"ally\",\r\n    speed: 1,\r\n  },\r\n  {\r\n    name: \"Taernijski Barbarzyńca\",\r\n    attack: 3,\r\n    hp: 1,\r\n    cost: 2,\r\n    description: \"Wali mocno aż miło\",\r\n    type: \"ally\",\r\n    speed: 1,\r\n  },\r\n  {\r\n    name: \"Taernijski Mag Ognia\",\r\n    attack: 4,\r\n    hp: 2,\r\n    cost: 4,\r\n    description: \"Strzeż się ognia\",\r\n    type: \"ally\",\r\n    speed: 2,\r\n  },\r\n  {\r\n    name: \"Taernijski Łucznik\",\r\n    attack: 2,\r\n    hp: 2,\r\n    cost: 2,\r\n    description: \"Salwa!\",\r\n    type: \"ally\",\r\n    speed: 2,\r\n  },\r\n  {\r\n    name: \"Taernijski Druid\",\r\n    attack: 1,\r\n    hp: 6,\r\n    cost: 4,\r\n    description: \"Za naturę!\",\r\n    type: \"ally\",\r\n    speed: 3,\r\n  },\r\n  {\r\n    name: \"Taernijski Voodoo\",\r\n    attack: 2,\r\n    hp: 1,\r\n    cost: 4,\r\n    description: \"Szpila w oko!\",\r\n    type: \"ally\",\r\n    speed: 3,\r\n  },\r\n  {\r\n    name: \"Ogr Bojowy\",\r\n    attack: 5,\r\n    hp: 5,\r\n    cost: 5,\r\n    description: \"Waaargh!\",\r\n    type: \"ally\",\r\n    speed: 1,\r\n  },\r\n  {\r\n    name: \"Harpia\",\r\n    attack: 3,\r\n    hp: 7,\r\n    cost: 5,\r\n    description: \"Łiii!\",\r\n    type: \"ally\",\r\n    speed: 2,\r\n  },\r\n  {\r\n    name: \"Żaba\",\r\n    attack: 3,\r\n    hp: 3,\r\n    cost: 4,\r\n    description: \"Skrzek!\",\r\n    type: \"ally\",\r\n    speed: 2,\r\n  },\r\n  {\r\n    name: \"Bibliotekarz\",\r\n    attack: 5,\r\n    hp: 8,\r\n    cost: 8,\r\n    description: \"Cisza!\",\r\n    type: \"ally\",\r\n    speed: 3,\r\n  },\r\n  {\r\n    name: \"Babadek\",\r\n    attack: 7,\r\n    hp: 7,\r\n    cost: 7,\r\n    description: \"Gdzie moje psy?\",\r\n    type: \"ally\",\r\n    speed: 1,\r\n  },\r\n  {\r\n    name: \"Ghadira\",\r\n    attack: 10,\r\n    hp: 7,\r\n    cost: 9,\r\n    description: \"Kto wchodzi do mojej wieży?\",\r\n    type: \"ally\",\r\n    speed: 1,\r\n  },\r\n  {\r\n    name: \"Gregorius\",\r\n    attack: 4,\r\n    hp: 6,\r\n    cost: 7,\r\n    description: \"Kto wchodzi do mojej wieży?\",\r\n    type: \"ally\",\r\n    speed: 3,\r\n  },\r\n  {\r\n    name: \"Ropuch\",\r\n    attack: 6,\r\n    hp: 10,\r\n    cost: 8,\r\n    description: \"Czy to książę?\",\r\n    type: \"ally\",\r\n    speed: 2,\r\n  },\r\n  {\r\n    name: \"Niedźwiedź\",\r\n    attack: 2,\r\n    hp: 2,\r\n    cost: 2,\r\n    description: \"Miś 2/2 za 2.\",\r\n    type: \"ally\",\r\n    speed: 1,\r\n  },\r\n  {\r\n    name: \"Utorski Asasyn\",\r\n    attack: 8,\r\n    hp: 1,\r\n    cost: 4,\r\n    description: \"Jak się go złapie to jest frajer.\",\r\n    type: \"ally\",\r\n    speed: 1,\r\n  },\r\n  {\r\n    name: \"Taernijski Tarczownik\",\r\n    attack: 2,\r\n    hp: 10,\r\n    cost: 6,\r\n    description: \"I co mu zrobisz?\",\r\n    type: \"ally\",\r\n    speed: 1,\r\n  },\r\n  {\r\n    name: \"Taernijski Kusznik\",\r\n    attack: 5,\r\n    hp: 3,\r\n    cost: 5,\r\n    description: \"Wali mocniej niż z łuku.\",\r\n    type: \"ally\",\r\n    speed: 2,\r\n  },\r\n  {\r\n    name: \"Utorski Ogr\",\r\n    attack: 12,\r\n    hp: 12,\r\n    cost: 12,\r\n    description: \"Chodząca twierdza.\",\r\n    type: \"ally\",\r\n    speed: 1,\r\n  },\r\n]\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-player',\r\n  templateUrl: './player.component.html',\r\n  styleUrls: ['./player.component.css']\r\n})\r\nexport class PlayerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-deck></app-deck>\r\n<app-hand cdkDropList cdkDropListOrientation=\"horizontal\"></app-hand>\r\n<app-action-points></app-action-points>\r\n","<app-card *ngFor=\"let card of cards; let i = index\" [card]=\"card\" [ngStyle]=\"calculateRotation(i)\" cdkDrag [cdkDragData]=\"{card: card, index: i}\" ></app-card>\r\n","import { Component, OnInit, DoCheck } from '@angular/core'\r\n\r\nimport { HandService } from \"./hand.service\";\r\n\r\nimport { Card } from \"../../shared/card/card.model\"\r\n\r\n@Component({\r\n  selector: 'app-hand',\r\n  templateUrl: './hand.component.html',\r\n  styleUrls: ['./hand.component.css']\r\n})\r\n\r\nexport class HandComponent implements OnInit, DoCheck {\r\n  cards: Card[] = []\r\n\r\n  constructor(private handService: HandService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.handService.drawCards(4)\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    this.cards = this.handService.getHand()\r\n  }\r\n\r\n  calculateRotation(index: number) {\r\n    let steps = 90 / this.cards.length\r\n    return {transform: `rotate(${-45 + steps * index}deg)`}\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-opponent-avatar',\n  templateUrl: './opponent-avatar.component.html',\n  styleUrls: ['./opponent-avatar.component.css']\n})\nexport class OpponentAvatarComponent implements OnInit {\n  @Input() playerHp: number;\n  playerClass: string = \"firemage\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"avatar\">\n  <img [src]=\"'assets/images/classes/' + playerClass + '.svg'\" alt=\"player avatar\" class=\"avatarImage\"/>\n  <img src=\"assets/images/zones/hp.svg\" alt=\"hp\" class=\"hp\"/>\n  <div class=\"hpNumber\">{{ playerHp }}</div>\n</div>\n","<app-player-avatar></app-player-avatar>\r\n<app-mental [card]=\"mental\" [oppCard]=\"mentalOpp\" ><div class=\"playerCard\" cdkDropList (cdkDropListDropped)=\"drop($event)\" [cdkDropListData]=\"'mental'\" (cdkDropListEntered)=\"showMental = false\" (cdkDropListExited)=\"showMental = true\"><app-card *ngIf=\"mental && showMental\" [card]=\"mental\"></app-card></div></app-mental>\r\n<app-ranged [card]=\"ranged\" [oppCard]=\"rangedOpp\" ><div class=\"playerCard\" cdkDropList (cdkDropListDropped)=\"drop($event)\" [cdkDropListData]=\"'ranged'\" (cdkDropListEntered)=\"showRanged = false\" (cdkDropListExited)=\"showRanged = true\"><app-card *ngIf=\"ranged && showRanged\" [card]=\"ranged\"></app-card></div></app-ranged>\r\n<app-melee [card]=\"melee\" [oppCard]=\"meleeOpp\" ><div class=\"playerCard\" cdkDropList (cdkDropListDropped)=\"drop($event)\" [cdkDropListData]=\"'melee'\" (cdkDropListEntered)=\"showMelee = false\" (cdkDropListExited)=\"showMelee = true\"><app-card *ngIf=\"melee && showMelee\" [card]=\"melee\"></app-card></div></app-melee>\r\n<app-opponent-avatar [playerHp]=\"oppHP\"></app-opponent-avatar>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CdkDragDrop } from '@angular/cdk/drag-drop'\r\nimport { Card } from '../shared/card/card.model';\r\n\r\nimport { BattlefieldService } from './battlefield.service'\r\nimport { HandService } from '../player/hand/hand.service'\r\nimport { PlayerService } from '../player/player.service'\r\n\r\n@Component({\r\n  selector: 'app-battlefield',\r\n  templateUrl: './battlefield.component.html',\r\n  styleUrls: ['./battlefield.component.css']\r\n})\r\nexport class BattlefieldComponent implements OnInit {\r\n  melee: Card | null = null\r\n  ranged: Card | null = null\r\n  mental: Card | null = null\r\n  meleeOpp: Card | null = null\r\n  rangedOpp: Card | null = null\r\n  mentalOpp: Card | null = null\r\n  showMental: boolean = true\r\n  showRanged: boolean = true\r\n  showMelee: boolean = true\r\n\r\n  oppHP: number\r\n\r\n  constructor(private battlefieldService: BattlefieldService, private handService: HandService, private playerService: PlayerService) {\r\n    this.battlefieldService.cardEmitter.subscribe((arg: {card: Card | null, row: string}) => this[arg.row] = arg.card)\r\n    this.battlefieldService.oppHpEmitter.subscribe((arg: number) => this.oppHP = arg)\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.oppHP = this.battlefieldService.getOppHp()\r\n    this.rangedOpp = this.battlefieldService.getCard(\"rangedOpp\")\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string>) {\r\n    this.showMental = true;\r\n    this.showRanged = true\r\n    this.showMelee = true\r\n    if ((event.container.data === \"melee\" || event.container.data === \"ranged\" || event.container.data === \"mental\") && event.item.data.card.cost <= this.playerService.getActionPoints().current) {\r\n      this.playerService.payCosts(event.item.data.card.cost)\r\n      this.battlefieldService.setCard(event.item.data.card, event.container.data)\r\n      this.handService.removeCard(event.item.data.index)\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<ng-content></ng-content>\n<div *ngIf=\"!oppCard\" class=\"opponentCard\"></div>\n<app-card *ngIf=\"oppCard\" [card]=\"oppCard\"></app-card>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Card } from '../../shared/card/card.model';\n\n@Component({\n  selector: 'app-mental',\n  templateUrl: './mental.component.html',\n  styleUrls: ['./mental.component.css']\n})\nexport class MentalComponent implements OnInit {\n  @Input() card: Card;\n  @Input() oppCard: Card;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { Card } from './shared/card/card.model'\r\n\r\ninterface DataTransferred {\r\n  melee: Card\r\n  ranged: Card\r\n  mental: Card\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class HttpService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  sendData(cards: DataTransferred, player: number) {\r\n    return this.http.put<DataTransferred>(\"https://learning-angular-b5596.firebaseio.com/player\" + player, cards)\r\n  }\r\n\r\n  getData(player: number) {\r\n    return this.http.get<DataTransferred>(\"https://learning-angular-b5596.firebaseio.com/player\" + player)\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>\n<div *ngIf=\"!oppCard\" class=\"opponentCard\"></div>\n<app-card *ngIf=\"oppCard\" [card]=\"oppCard\"></app-card>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Card } from '../../shared/card/card.model';\n\n@Component({\n  selector: 'app-ranged',\n  templateUrl: './ranged.component.html',\n  styleUrls: ['./ranged.component.css']\n})\nexport class RangedComponent implements OnInit {\n  @Input() card: Card;\n  @Input() oppCard: Card;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { Card } from \"./card.model\"\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.css']\r\n})\r\nexport class CardComponent implements OnInit {\r\n  @Input() card: Card;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"name\">{{ card.name }}</div>\r\n<div class=\"image\">\r\n  <img [src]=\"card.image\" alt=\"card image\" />\r\n</div>\r\n<div class=\"stats\">\r\n  <div class=\"attack\">{{ card.attack }}</div>\r\n  <div class=\"hp\">{{ card.hp }}</div>\r\n  <div class=\"cost\">{{ card.cost }}</div>\r\n  <div class=\"speed\"><img [src]=\"'assets/images/zones/' + card.speed + '.svg'\" alt=\"card image\" /></div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-abilties',\r\n  templateUrl: './abilties.component.html',\r\n  styleUrls: ['./abilties.component.css']\r\n})\r\nexport class AbiltiesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>abilties works!</p>\r\n","import { Component } from '@angular/core';\r\n\r\nimport { CombatService} from './combat.service'\r\nimport { PlayerService } from './player/player.service'\r\nimport { BattlefieldService } from './battlefield/battlefield.service'\r\nimport { HttpService } from './http.service'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'taern-card';\r\n  isPlayerNumberSet: boolean = false;\r\n  isDataSent: boolean = false;\r\n  isDataReceived: boolean = false;\r\n  playerNumber: number\r\n  constructor(private combatService: CombatService, private playerService: PlayerService, private battlefieldService: BattlefieldService, private httpService: HttpService) {\r\n\r\n  }\r\n\r\n  combat() {\r\n    this.combatService.commenceCombat()\r\n    this.isDataSent = false\r\n    this.isDataReceived = false\r\n  }\r\n  setPlayerNumber(number: number) {\r\n    this.playerService.setPlayerNumber(number)\r\n    this.isPlayerNumberSet = true\r\n    this.playerNumber = number\r\n  }\r\n  sendData() {\r\n    this.httpService.sendData({melee: this.battlefieldService.getCard(\"melee\"), ranged: this.battlefieldService.getCard(\"ranged\"), mental: this.battlefieldService.getCard(\"mental\")}, this.playerService.getPlayerNumber()).subscribe(reponse => this.isDataSent = true)\r\n  }\r\n  getData() {\r\n    this.isDataReceived = true\r\n  }\r\n}\r\n","<div class=\"wrapper\" cdkDropListGroup>\r\n  <div class=\"buttons\">\r\n  <button [disabled]=\"isPlayerNumberSet\" class=\"playerNumber\" (click)=\"setPlayerNumber(1)\">Player 1</button>\r\n  <button [disabled]=\"isPlayerNumberSet\" class=\"playerNumber\" (click)=\"setPlayerNumber(2)\">Player 2</button>\r\n  <button [disabled]=\"!isPlayerNumberSet\" class=\"sendData\" (click)=\"sendData()\">Wyślij dane</button>\r\n  <button [disabled]=\"!isDataSent\" class=\"receiveData\" (click)=\"getData()\">Odbierz dane</button>\r\n  <button [disabled]=\"!isDataReceived\" class=\"combat\" (click)=\"combat()\">Walka!</button>\r\n  <p>Player {{ playerNumber }}</p>\r\n  </div>\r\n<app-opponent></app-opponent>\r\n<app-battlefield></app-battlefield>\r\n<app-player></app-player>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Card } from './shared/card/card.model';\r\n\r\nimport { BattlefieldService } from \"./battlefield/battlefield.service\"\r\nimport { PlayerService } from \"./player/player.service\"\r\nimport { HandService } from \"./player/hand/hand.service\"\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class CombatService {\r\n  constructor(private battlefieldService: BattlefieldService, private playerService: PlayerService, private handService: HandService) {}\r\n\r\n commenceCombat() {\r\n   const rows = [\"mental\", \"ranged\", \"melee\"]\r\n   rows.forEach(row => {\r\n     let playerCard: Card = this.battlefieldService.getCard(row)\r\n     let oppCard: Card = this.battlefieldService.getCard(row + \"Opp\")\r\n     if (playerCard) {\r\n       if (oppCard) {\r\n         this.clash(playerCard, oppCard, row)\r\n       } else {\r\n         this.battlefieldService.changeOppHp(-playerCard.attack)\r\n       }\r\n     } else if (oppCard) {\r\n       this.playerService.changeLifePoints(-oppCard.attack)\r\n     }\r\n   })\r\n   this.newTurn\r\n }\r\n clash(playerCard: Card, oppCard: Card, row: string) {\r\n   if (playerCard.speed === oppCard.speed) {\r\n     //jeśli karty mają taką samą szybkość, to biją w siebie nawzajem, a dopiero potem sprawdzamy czy ktoś zginął\r\n     this.battlefieldService.changeCardHp(-playerCard.attack, row + \"Opp\")\r\n     this.battlefieldService.changeCardHp(-oppCard.attack, row)\r\n     this.battlefieldService.buryTheFallen()\r\n   } else if (playerCard.speed < oppCard.speed) {\r\n     //jeśli karty mają różną szybkość, to najpierw szybsza zadaje obrażenia, a wolniejsza tylko jeśli przeżyje\r\n     // tutaj karta gracza jest wolniejsza, więc przeciwnik pierwszy zadaje obrażenia\r\n     this.battlefieldService.changeCardHp(-oppCard.attack, row)\r\n     this.battlefieldService.buryTheFallen()\r\n     //sprawdzamy czy karta gracza nadal żyje\r\n     if (this.battlefieldService.getCard(row)) {\r\n       //jak tak to też zadaje obrażeni\r\n       this.battlefieldService.changeCardHp(-playerCard.attack, row + \"Opp\")\r\n       this.battlefieldService.buryTheFallen()\r\n     }\r\n   } else {\r\n     // tutaj karta przeciwnika jest wolniejsza, więc gracz pierwszy zadaje obrażenia\r\n     this.battlefieldService.changeCardHp(-playerCard.attack, row + \"Opp\")\r\n     this.battlefieldService.buryTheFallen()\r\n     //sprawdzamy czy karta przeciwnika nadal żyje\r\n     if (this.battlefieldService.getCard(row + \"Opp\")) {\r\n       //jak tak to też zadaje obrażeni\r\n       this.battlefieldService.changeCardHp(-oppCard.attack, row)\r\n       this.battlefieldService.buryTheFallen()\r\n     }\r\n   }\r\n }\r\n newTurn() {\r\n   this.playerService.addActionPoints(1)\r\n   this.playerService.refreshActionPoints()\r\n   this.handService.drawCards(1)\r\n }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Card } from '../../shared/card/card.model';\r\nimport { DeckService } from '../deck/deck.service'\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class HandService {\r\n  private hand: Card[] = []\r\n\r\n  constructor(private deckService: DeckService) {}\r\n\r\n  getHand() {\r\n    return this.hand;\r\n  }\r\n  setHand(hand: Card[]) {\r\n    this.hand = hand\r\n  }\r\n  drawCards(number: number) {\r\n    this.hand = this.hand.concat(this.deckService.draw(number))\r\n  }\r\n  removeCard(index: number) {\r\n    this.hand.splice(index, 1)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { HttpClientModule } from '@angular/common/http'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BattlefieldComponent } from './battlefield/battlefield.component';\r\nimport { OpponentComponent } from './opponent/opponent.component';\r\nimport { PlayerComponent } from './player/player.component';\r\nimport { HandComponent } from './player/hand/hand.component';\r\nimport { DeckComponent } from './player/deck/deck.component';\r\nimport { AbiltiesComponent } from './player/abilties/abilties.component';\r\nimport { ActionPointsComponent } from './player/action-points/action-points.component';\nimport { CardComponent } from './shared/card/card.component';\nimport { MeleeComponent } from './battlefield/melee/melee.component';\nimport { RangedComponent } from './battlefield/ranged/ranged.component';\nimport { MentalComponent } from './battlefield/mental/mental.component';\nimport { PlayerAvatarComponent } from './battlefield/player-avatar/player-avatar.component';\nimport { OpponentAvatarComponent } from './battlefield/opponent-avatar/opponent-avatar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BattlefieldComponent,\r\n    OpponentComponent,\r\n    PlayerComponent,\r\n    DeckComponent,\r\n    HandComponent,\r\n    AbiltiesComponent,\r\n    ActionPointsComponent,\r\n    CardComponent,\r\n    MeleeComponent,\r\n    RangedComponent,\r\n    MentalComponent,\r\n    PlayerAvatarComponent,\r\n    OpponentAvatarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    DragDropModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Card } from '../../shared/card/card.model';\r\nimport { cards } from \"../../data/cards\"\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class DeckService {\r\n  private deck: Card[] = cards.map(card => new Card(card)).concat(cards.map(card => new Card(card)));\r\n  private discardPile: Card[] = []\r\n\r\n  constructor() {}\r\n\r\n  getDeck() {\r\n    return this.deck.slice();\r\n  }\r\n  getNumberOfCards() {\r\n    return this.deck.length\r\n  }\r\n  shuffle() {\r\n    var currentIndex = this.deck.length,\r\n      temporaryValue: Card,\r\n      randomIndex: number;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = this.deck[currentIndex];\r\n      this.deck[currentIndex] = this.deck[randomIndex];\r\n      this.deck[randomIndex] = temporaryValue;\r\n    }\r\n  }\r\n  draw(number: number) {\r\n    return this.deck.splice(0, number)\r\n  }\r\n  discard(card: Card) {\r\n    this.discardPile.push(card)\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { Card } from '../shared/card/card.model';\r\nimport { cards } from '../data/cards'\r\n\r\nimport { DeckService } from \"../player/deck/deck.service\"\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class BattlefieldService {\r\n  private melee: Card | null\r\n  private ranged: Card | null\r\n  private mental: Card | null\r\n  private meleeOpp: Card | null\r\n  private rangedOpp: Card | null = new Card(cards[0])\r\n  private mentalOpp: Card | null\r\n  private oppHp: number = 30\r\n\r\n  cardEmitter = new EventEmitter<{card: Card | null, row: string}>()\r\n  oppHpEmitter = new EventEmitter<number>()\r\n\r\n  constructor(private deckService: DeckService) {}\r\n\r\n  getCard(row: string) {\r\n    return this[row];\r\n  }\r\n  setCard(card: Card, row: string) {\r\n    this[row] = card\r\n    this.cardEmitter.emit({card: card, row: row})\r\n  }\r\n  getOppHp() {\r\n    return this.oppHp\r\n  }\r\n  changeOppHp(number: number) {\r\n    this.oppHp += number\r\n    this.oppHpEmitter.emit(this.oppHp)\r\n  }\r\n  changeCardHp(number: number, row: string) {\r\n    this[row].hp += number\r\n  }\r\n  removeCard(card: Card, row: string) {\r\n    this.deckService.discard(card)\r\n    this[row] = null\r\n    this.cardEmitter.emit({card: null, row: row})\r\n  }\r\n  buryTheFallen() {\r\n    const rows = [\"mental\", \"ranged\", \"melee\", \"mentalOpp\", \"rangedOpp\", \"meleeOpp\"]\r\n    rows.forEach(row => {\r\n      if (this[row] && this[row].hp <= 0) {\r\n        this.removeCard(this[row], row)\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit, DoCheck } from '@angular/core';\n\nimport { PlayerService } from \"../../player/player.service\"\n\n@Component({\n  selector: 'app-player-avatar',\n  templateUrl: './player-avatar.component.html',\n  styleUrls: ['./player-avatar.component.css']\n})\nexport class PlayerAvatarComponent implements OnInit, DoCheck {\n  playerClass: string = \"barbarian\";\n  playerHP: number;\n  constructor(private playerService: PlayerService) { }\n\n  ngOnInit(): void {\n    this.playerHP = this.playerService.getLifePoints()\n  }\n\n  ngDoCheck() {\n    this.playerHP = this.playerService.getLifePoints()\n  }\n}\n","<div class=\"avatar\">\n  <img [src]=\"'assets/images/classes/' + playerClass + '.svg'\" alt=\"player avatar\" class=\"avatarImage\"/>\n  <img src=\"assets/images/zones/hp.svg\" alt=\"hp\" class=\"hp\"/>\n  <div class=\"hpNumber\">{{playerHP}}</div>\n</div>\n","<div class=\"deck\" (mouseenter)=\"showTooltip = true\" (mouseleave)=\"showTooltip = false\" ><div class=\"deckTooltip\" *ngIf=\"showTooltip\">Karty w talii: {{ cardsinDeck }}</div></div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { DeckService } from \"./deck.service\";\r\n\r\n@Component({\r\n  selector: 'app-deck',\r\n  templateUrl: './deck.component.html',\r\n  styleUrls: ['./deck.component.css']\r\n})\r\nexport class DeckComponent implements OnInit {\r\n  showTooltip: boolean = false\r\n  cardsinDeck: number\r\n\r\n  constructor(private deckService: DeckService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.deckService.shuffle()\r\n    this.cardsinDeck = this.deckService.getNumberOfCards()\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    this.cardsinDeck = this.deckService.getNumberOfCards()\r\n  }\r\n\r\n}\r\n","export class Card {\r\n  public name: string;\r\n  public amount: number;\r\n  public image: string;\r\n  public attack: number\r\n  public hp: number\r\n  public cost: number\r\n  public description: string\r\n  public type: \"ally\" | \"ability\"\r\n  public speed: number\r\n  constructor(rawCard: RawCard) {\r\n    this.name = rawCard.name;\r\n    this.image = `assets/images/cards/${rawCard.name}.svg`;\r\n    this.attack = rawCard.attack ? rawCard.attack : 0;\r\n    this.hp = rawCard.hp ? rawCard.hp : 0;\r\n    this.cost = rawCard.cost\r\n    this.description = rawCard.description\r\n    this.type = rawCard.type\r\n    this.speed = rawCard.speed\r\n  }\r\n}\r\n\r\nexport interface RawCard {\r\n  name: string\r\n  attack?: number\r\n  hp?: number\r\n  cost: number\r\n  description: string\r\n  type: \"ally\" | \"ability\"\r\n  speed: number\r\n}\r\n","import { Component, OnInit, DoCheck } from '@angular/core';\r\n\r\nimport { PlayerService } from \"../player.service\"\r\n\r\n@Component({\r\n  selector: 'app-action-points',\r\n  templateUrl: './action-points.component.html',\r\n  styleUrls: ['./action-points.component.css']\r\n})\r\nexport class ActionPointsComponent implements OnInit, DoCheck {\r\n\r\n  constructor(private playerService: PlayerService) { }\r\n  currentActionPoints: number\r\n  maxActionPoints: number\r\n\r\n  ngOnInit(): void {\r\n    this.currentActionPoints = this.playerService.getActionPoints().current\r\n    this.maxActionPoints = this.playerService.getActionPoints().max\r\n  }\r\n\r\n  ngDoCheck() {\r\n    this.currentActionPoints = this.playerService.getActionPoints().current\r\n    this.maxActionPoints = this.playerService.getActionPoints().max\r\n  }\r\n\r\n}\r\n","<div class=\"actionPoints\">\r\n  <p>{{ currentActionPoints }}/{{ maxActionPoints }}</p>\r\n</div>\r\n","<ng-content></ng-content>\r\n<div *ngIf=\"!oppCard\" class=\"opponentCard\"></div>\r\n<app-card *ngIf=\"oppCard\" [card]=\"oppCard\"></app-card>\r\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Card } from '../../shared/card/card.model';\n\n@Component({\n  selector: 'app-melee',\n  templateUrl: './melee.component.html',\n  styleUrls: ['./melee.component.css']\n})\nexport class MeleeComponent implements OnInit {\n  @Input() card: Card;\n  @Input() oppCard: Card;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class PlayerService {\r\n  private maxActionPoints: number = 3\r\n  private currentActionPoints: number = 3\r\n  private hp: number = 30\r\n  private playerNumber = 1\r\n  constructor() {}\r\n\r\n  getActionPoints() {\r\n    return {current: this.currentActionPoints, max: this.maxActionPoints}\r\n  }\r\n  addActionPoints(number: number) {\r\n    this.maxActionPoints === 12 ? this.maxActionPoints += 0 : this.maxActionPoints += number\r\n  }\r\n  payCosts(number: number) {\r\n    this.currentActionPoints -= number\r\n  }\r\n  refreshActionPoints() {\r\n    this.currentActionPoints = this.maxActionPoints\r\n  }\r\n  getLifePoints() {\r\n    return this.hp\r\n  }\r\n  changeLifePoints(number: number) {\r\n    this.hp += number\r\n  }\r\n  getPlayerNumber() {\r\n    return this.playerNumber\r\n  }\r\n  setPlayerNumber(number: number) {\r\n    this.playerNumber = number\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}